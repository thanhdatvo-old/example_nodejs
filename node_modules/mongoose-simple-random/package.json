{
  "name": "mongoose-simple-random",
  "version": "0.3.3",
  "description": "Simple and easy-to-use NodeJS Mongoose Schema plugin to pull random documents",
  "main": "mongoose-simple-random.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/larryprice/mongoose-simple-random.git"
  },
  "keywords": [
    "mongoose",
    "random"
  ],
  "author": {
    "name": "Larry Price",
    "email": "larry.price.dev@gmail.com",
    "url": "http://larry-price.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/larryprice/mongoose-simple-random/issues"
  },
  "homepage": "https://github.com/larryprice/mongoose-simple-random",
  "devDependencies": {
    "async": "^1.4.2",
    "chai": "^1.9.1",
    "mocha": "^1.21.4",
    "mockgoose": "^1.10.2",
    "mongoose": "^3.8.15"
  },
  "readme": "### mongoose-simple-random\n\nAuthor: Larry Price  \nWebsite: [larry-price.com](https://larry-price.com)  \nEmail: <larry.price.dev@gmail.com> \n\n#### Description\n\nSimple and easy-to-use NodeJS Mongoose Schema plugin to find random documents.\n\n#### Usage\n\n``` javascript\nvar random = require('mongoose-simple-random');\n\nvar s = new Schema({\n  message: String\n});\ns.plugin(random);\n\nTest = mongoose.model('Test', s);\n\n// Find a single random document\nTest.findOneRandom(function(err, result) {\n  if (!err) {\n    console.log(result); // 1 element\n  }\n});\n\n// Find \"limit\" random documents (defaults to array of 1)\nTest.findRandom({}, {}, {limit: 5}, function(err, results) {\n  if (!err) {\n    console.log(results); // 5 elements\n  }\n});\n\n// Parameters match parameters for \"find\"\nvar filter = { genre: { $in: ['adventure', 'point-and-click'] } };\nvar fields = { name: 1, description: 0 };\nvar options = { skip: 10, limit: 10 };\nTest.findRandom(filter, fields, options, function(err, results) {\n  if (!err) {\n    console.log(results); // 10 elements, name only, in genres \"adventure\" and \"point-and-click\" \n  }\n});\n```\n\n## Tests\n\n```\n$ npm test\n```\n\n## Contributing\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style.\n\nAdd unit tests for any new or changed functionality. Lint and test your code.\n\n## Release History\n\n* 0.1.0 Initial release\n* 0.2.0 API change - findRandom always returns array, findOneRandom returns single item\n* 0.2.1 README update\n* 0.3.0 API change - flip-flopping on \"count\", use \"limit\" to tell findByRandom how many elements to return\n",
  "readmeFilename": "README.md",
  "_id": "mongoose-simple-random@0.3.3",
  "dist": {
    "shasum": "0185e8421904f840c7c4d34f5a07fea5b7f5357d"
  },
  "_from": "mongoose-simple-random@^0.3.3",
  "_resolved": "https://registry.npmjs.org/mongoose-simple-random/-/mongoose-simple-random-0.3.3.tgz"
}
